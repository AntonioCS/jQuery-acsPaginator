
Acs Paginator!

A Simple paginator powered by jQuery.

How to use:

	- Simplest use:
		$('#element_id').acsPaginator();
	
		Where #element_id has N elements inside.
		

Options:

	- items: Total items. If not set to null the plugin will count the children. Default = null.
	- tPages: Total pages. If not set to null the pluging will calculate. Default = null.
	- itemsPerPage: Show N items per page. Default = 4
	- autoCallPageFuncOnStart: Call the pagination function when started. Default = true.		
	- showMaxLinks: If not null only this amount of links will be shown. Default = 5.
	- alwaysShowFirstAndLast: Always show the first and last page links (will only work if showMaxLinks is not null). Default = true.
	- alwaysShowFirstAndLastSeperator: Default = '..'.
		 		
	- placeHolder: By default the pagination will be added to the parent. Set here where to place it if you want to change this behaviour. Default = null.
	- currPage: Page to start with. Default 1
				
	- container:Container for the pagination elements. Default = <div>.
	- containerClass: Default = 'acsPaginator'.	
	- pageNumbersContainer:'<ul>',
	- pageNumbersContainerChildren:'<li>',
	
	
	- noPrevNextBtn: No < or > button. Default = false.
	- prevBtn: Default = '&lt;' (<).
	- prevBtnClass: Default = ''.
		
	- nextBtn: Default = '&gt;' (>).
	- nextBtnClass: Default = ''.
		
	- continueOnOnePage: Create pagination elements if there are not enough elements. Default = false,
		
	- pageActiveClass:Class for the element in the pagination container that represents the active page. Default = 'acsPageActive'.
	- pageClass:'acsPage'.
		
		/**
		 * Delegate function for the pagination links
		 * 
		 * @param event e
		 * @param jQuery link
		 * @param int pPage - Page to go
		 * @param int itemsPerPage
		 * @param int currPage
		 * @param mixed items
		 * @param int tPages
		 * @param function showPage A simpler version of $.fn.acsPaginator.showPage where only the page to go is required
		 * 
		 * @return int current page 
		 */
		delegateFunc:function (e,link,pPage,itensPerPage,currPage,items,tPages,showPage) {   
			var newCurrPage = currPage;
			     
	        if (pPage.match(/\d+/) && pPage > 0) {
	            newCurrPage = showPage(pPage);
	        }
	        else {
	        	//Force number
	        	currPage *=1;
	            //ie6 hack. Must split on the #                    
	            switch (link.attr('href').split('#')[1]) {
	                case 'prev':
	                    if (currPage > 1)
	                        newCurrPage = showPage(--currPage);
	                    break;
	                case 'next':
	                    if (currPage < tPages) {
	                        newCurrPage = showPage(++currPage);
	                    }
	                break;
	        	}        
			}
			
			return newCurrPage;
		},
		
		/**	 
		 * Function that will show/hide the items. Must return the current page 
		 *
		 * @param int pPage
		 * @param int itemsPerPage
		 * @param int currPage
		 * @param mixed items
		 * @param int tPages
		 * 
		 * @return int current page 
		 */
		showPage:function (pPage,itensPerPage,currPage,items,tPages) {
	    	currPage = pPage * 1; //Convert to number
	
	    	var end = itensPerPage * currPage,
				start = end - itensPerPage;
	
	    	items.filter(':visible').hide();
	    	items.slice(start, end).show();
	    	
	    	return currPage;
		},
		
		delegateClickPreventDefault: true,			
		delegateClickStopPropagation: true			
	};